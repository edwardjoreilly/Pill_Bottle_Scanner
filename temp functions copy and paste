from flask import Flask, render_template
from paddleocr import PaddleOCR
import os
import cv2
import sqlite3

app = Flask(__name__)


@app.route('/')
def index():
    list = []

    ocr_model = PaddleOCR(lang='en')
    img_path = os.path.join('.', 'testRX.jpg')
    result = ocr_model.ocr(img_path)

    for res in result:
        list.append(res[1][0])

    return render_template('index.html', result = list)





@app.route("/")
def test():
	# Get user supplied values
	imagePath = "abba.png"
	cascPath = "haarcascade_frontalface_default.xml"

	# Create the haar cascade
	faceCascade = cv2.CascadeClassifier(cascPath)

	# Read the image
	image = cv2.imread(imagePath)
	gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

	# Detect faces in the image
	faces = faceCascade.detectMultiScale(
	    gray,
	    scaleFactor=1.2,
	    minNeighbors=5,
	    minSize=(30, 30),
	    flags=cv2.CASCADE_SCALE_IMAGE
	)

	# print("Found {0} faces!".format(len(faces)))

	# Draw a rectangle around the faces
	for (x, y, w, h) in faces:
	    cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2)

	cv2.imshow("Faces found", image)
	cv2.waitKey(0)

	return render_template("index.html")



if __name__ == '__main__':
   app.run(debug = True)
